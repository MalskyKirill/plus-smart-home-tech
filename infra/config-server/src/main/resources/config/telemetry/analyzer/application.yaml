spring:
    kafka:
        bootstrap-servers: localhost:9092
        consumer:
            hub-group-id: hub-analyzer-group
            hub-client-id-config: hub-event-consumer
            hub-key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            hub-value-deserializer: ru.yandex.practicum.deserializer.HubEventDeserializer
            snapshot-group-id: snapshot-analyzer-group
            snapshot-client-id-config: snapshot-consumer
            snapshot-key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            snapshot-value-deserializer: ru.yandex.practicum.deserializer.SensorSnapshotDeserializer

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: none
        properties:
            hibernate:
                format_sql: true
    sql:
        init:
            mode: always
    output:
        ansi:
            enabled: ALWAYS

    datasource:
        driverClassName: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5433/analyzer
        username: postgres
        password: 12345

grpc:
    client:
        hub-router:
            address: static://localhost:59090
            enableKeepAlive: true
            keepAliveWithoutCalls: true
            negotiationType: plaintext

logging:
    level:
        "org.springframework.orm.jpa": INFO
        "org.springframework.transaction": INFO
        "org.springframework.transaction.interceptor": TRACE
        "org.springframework.orm.jpa.JpaTransactionManager": DEBUG
        "org.hibernate.SQL": DEBUG
        "org.hibernate.orm.jdbc.bind": trace
